/* Language: css 



COLORES
#F9004D


TRANSICIONES

1. Ara que el boton se haga     .btn{
   mas grande cuando se pase       transition: transform .4s
   el mouse por encima          }
                                .btn:hover{
                                    transform: scale(1.1);
                                }




seleccion por classe .classe 
seleccion por id #id
seleccion por tag tagname
seleccion por atributo [atributo="valor"]

Box.sizing:
    content-box: se usa para que el elemento tenga un ancho y un alto fijo
    border-box: se usa para que el elemento tenga un ancho y un alto fijo y tenga un borde
    



ESPECIFIDAD CSS
1. !important
2. estilos inline
3. estilos de un id
4. estilos de una clase
5. estilos de un atributo
5. estilos de un element/tag


METODOLOGIA BEM


NORMALIZE CSS I TEORIA DE CAJAS
Normalizar es resetear todos los estilos de css

cajas

1. en linia: el ancho es solo el elemento en si
2. en bloques: el ancho ocupa todo el ancho del contenedor que lo contiene

propiedades:
outline: none;  //resalta y no afecta al DOM no ocupa espacio

position: hay que posicionar las cosas para que tengan las propiedad de 
top,left,z-index,etc

absolute; //posicion absoluta y desaparece el esapcio de dicha posicion 
i se ajusta al contenido
relative; //posicion relativa y sigue el esapcio de su contenedor
fixed; //posicion fija
z-index: //especifica el orden de la capa para poner a un padre encima 
del hijo tenemos que darle un z-index negativo al hijo i al padre no
definirle un z-index. 


cuando los elementos en modo absolute estan dentro de un contenedor posicionado 
toman 
como referencia este contenedor i no el viewport

overflow es el scroll
overflow-x: hidden; //oculta el scroll horizontal y recorta lo que se sobresale
overflow-y: hidden; //oculta el scroll vertical

float solo usar para que un texto envuelva a una imagen

:placeholder    //especifica el texto que se muestra en el input cuando no hay nada escrito
:selecction     //es el estilo de la seleccion

seudoclasses
:lang   //especifica el idioma de un elemento
:hover //cuando el mouse pasa por encima del elemento
:active //cuando el mouse esta presionado en el elemento
:focus //cuando el elemento tiene el foco en los inputs esta seleccionado
:visited //cuando el elemento fue visitado
:link //cuando el elemento es un link aun no visitado
:target //cuando el elemento es el target
:enabled //cuando el elemento esta habilitado
:disabled //cuando el elemento esta deshabilitado
:checked //cuando el elemento esta checkeado
:empty //cuando el elemento esta vacio
:first-child //cuando el elemento es el primero de su contenedor
:last-child //cuando el elemento es el ultimo de su contenedor
:first-of-type //cuando el elemento es el primero de su tipo
:last-of-type //cuando el elemento es el ultimo de su tipo
:only-child //cuando el elemento es el unico hijo de su contenedor
:only-of-type //cuando el elemento es el unico de su tipo
:nth-child(n) //cuando el elemento es el n-esimo hijo de su contenedor
:nth-last-child(n) //cuando el elemento es el n-esimo ultimo hijo de su contenedor
:not(selector) //cuando el elemento no es el selector


Object Fit
object-fit: cover; //toma el tamaño del contenedor 
object-fit: contain; //
object-fit: fill; //
object-fit: none; //por defecto

object-position: center; //posicion del objeto en el contenedor
object-position: top; //
object-position: bottom; //
object-position: left; //
object-position: right; //


Display flex
display: flex; //es una propiedad que permite que un elemento se muestre como flex
flex-direction: row, column ; //especifica la direccion de los elementos en el flex
flex-wrap: wrap; //especifica que los elementos se muestren en una sola linea
flex-flow: row, column; //especifica la direccion de los elementos en el flex y si se puede agregar una linea nueva
flex-grow: 1; //especifica que el elemento ocupara todo el espacio disponible
flex-shrink: 1; //especifica cuanto espacio sedecera
flex-basis: auto; //especifica el tamaño del elemento

align-items: aliña verticalmente flex-start, flex-end, center, baseline, stretch; //especifica la alineacion de los elementos en el flex
align-content: flex-start, flex-end, center, space-between, space-around; //especifica la alineacion del contenido en el flex
justify-content: flex-start, flex-end, center, space-between, space-around; //especifica la alineacion del contenido en el flex

propiedades items
align-self: flex-start, flex-end, center, baseline, stretch; //especifica la alineacion del elemento en el flex

Margin dentro de una caja flex funciona distinto a fuera de 


GRID
es como una tabla con diferentes celdas

gird container //es el contenedor de las celdas
grid item // cada elemento que sea hijo directo del contenedor que no una celda
grid cell // cada celda de la tabla
grid track (clomun i row) // cada una de las filas o columnas de la tabla
grid area // cada una de las areas que seleccionamos o definimos de la tabla
grid line // cada una de las lineas de la tabla

propiedades de grid container
grid-template-columns: repeat(auto-fit, minmax(100px, 1fr)); //especifica el numero de columnas y el tamaño de cada una
grid-template-rows: repeat(auto-fit, minmax(100px, 1fr)); //especifica el numero de filas y el tamaño de cada una

grid-gap: 10px; //especifica el espacio entre cada celda
grid-column-gap: 10px; //especifica el espacio entre cada columna
grid-row-gap: 10px; //especifica el espacio entre cada fila
grid-auto-columns: minmax(100px, 1fr); //especifica el tamaño de las columnas automaticamente
grid-auto-rows: minmax(100px, 1fr); //especifica el tamaño de las filas automaticamente

grid-column: column-start / column-end; //especifica la columna de un elemento
grid-row: row-start / row-end; //especifica la fila de un elemento
grid-column-start: column; //especifica la columna de un elemento
grid-column-end: column; //especifica la columna de un elemento
grid-row-start: row; //especifica la fila de un elemento
grid-row-end: row; //especifica la fila de un elemento

Grid implicito: cuando hay mas celdas en el html de las que le decimos que cree el grid

Grid Dinamico:
minmax(100px, 1fr); //especifica el tamaño minimo y maximo de una celda
mincontent; //especifica el tamaño minimo de una celda
maxcontent; //especifica el tamaño maximo de una celda
cantidad:
auto-fill;
auto-fit; //escala las que ya hay para que ocupen todo el esapcio disponible






RESPONSIVE DISEGN









*/